# RELEASE - Location of external support modules
#
# IF YOU MAKE ANY CHANGES to this file you must subsequently
# do a "gnumake rebuild" in this application's top level
# directory.
#
# The build process does not check dependencies against files
# that are outside this application, thus you should do a
# "gnumake rebuild" in the top level directory after EPICS_BASE
# or any other external module pointed to below is rebuilt.
#
# Host- or target-specific settings can be given in files named
#  RELEASE.$(EPICS_HOST_ARCH).Common
#  RELEASE.Common.$(T_A)
#  RELEASE.$(EPICS_HOST_ARCH).$(T_A)
#
# This file is parsed by both GNUmake and an EPICS Perl script,
# so it can ONLY contain definititions of paths to other support
# modules, variable definitions that are used in module paths,
# and include statements that pull in other RELEASE files.
# Variables may be used before their values have been set.
# Build variables that are NOT used in paths should be set in
# the CONFIG_SITE file.

# EPICS_BASE should appear last so earlier modules can override stuff:
EPICS_BASE = C:/Instrument/Apps/EPICS/base/master

## VISAdrvApp only requires asyn
ASYN = $(SUPPORT)/asyn/master
CALC = $(SUPPORT)/calc/master
SSCAN = $(SUPPORT)/sscan/master

## VISAdrvTestApp requires StreamDevice
STREAMDEVICE=$(SUPPORT)/StreamDevice/master
ONCRPC = $(SUPPORT)/oncrpc/master
## If your StreamDevice installation was built with pcre support, define PCRE too 
PCRE = $(SUPPORT)/pcre/master

# Set RULES here if you want to use build rules from somewhere
# other than EPICS_BASE:
#RULES = $(MODULES)/build-rules

# These allow developers to override the RELEASE variable settings
# without having to modify the configure/RELEASE file itself.
-include $(TOP)/../RELEASE.local
-include $(TOP)/configure/RELEASE.local

# optional extra local definitions here
-include $(TOP)/configure/RELEASE.private

-include $(TOP)/../../../ISIS_CONFIG
-include $(TOP)/../../../ISIS_CONFIG.$(EPICS_HOST_ARCH)
